/*
 * JCuda - Java bindings for NVIDIA CUDA driver and runtime API
 *
 * Copyright (c) 2009-2020 Marco Hutter - http://www.jcuda.org
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

 /* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jcuda_nvptxcompiler_JNvPTXCompiler */

#ifndef _Included_jcuda_nvptxcompiler_JNvPTXCompiler
#define _Included_jcuda_nvptxcompiler_JNvPTXCompiler
#ifdef __cplusplus
extern "C" {
#endif
    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    setLogLevel
     * Signature: (I)V
     */
    JNIEXPORT void JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_setLogLevel
    (JNIEnv*, jclass, jint);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerGetVersionNative
     * Signature: ([I[I)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerGetVersionNative
    (JNIEnv*, jclass, jintArray, jintArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerCreateNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;J[B)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerCreateNative
    (JNIEnv*, jclass, jobject, jlong, jbyteArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerDestroyNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerDestroyNative
    (JNIEnv*, jclass, jobject);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerCompileNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;I[Ljava/lang/String;)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerCompileNative
    (JNIEnv*, jclass, jobject, jint, jobjectArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerGetCompiledProgramSizeNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;[J)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerGetCompiledProgramSizeNative
    (JNIEnv*, jclass, jobject, jlongArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerGetCompiledProgramNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;[B)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerGetCompiledProgramNative
    (JNIEnv*, jclass, jobject, jbyteArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerGetErrorLogSizeNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;[J)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerGetErrorLogSizeNative
    (JNIEnv*, jclass, jobject, jlongArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerGetErrorLogNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;[B)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerGetErrorLogNative
    (JNIEnv*, jclass, jobject, jbyteArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerGetInfoLogSizeNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;[J)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerGetInfoLogSizeNative
    (JNIEnv*, jclass, jobject, jlongArray);

    /*
     * Class:     jcuda_nvptxcompiler_JNvPTXCompiler
     * Method:    nvPTXCompilerGetInfoLogNative
     * Signature: (Ljcuda/nvptxcompiler/nvPTXCompilerHandle;[B)I
     */
    JNIEXPORT jint JNICALL Java_jcuda_nvptxcompiler_JNvPTXCompiler_nvPTXCompilerGetInfoLogNative
    (JNIEnv*, jclass, jobject, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
